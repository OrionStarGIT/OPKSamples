{"version":3,"sources":["/Applications/MAMP/htdocs/testDemo/index.js","/Applications/MAMP/htdocs/testDemo/node_modules/orionos-eve-core/index.ts","/Applications/MAMP/htdocs/testDemo/node_modules/orionos-eve-core/src/robot/api/AppManager.ts","/Applications/MAMP/htdocs/testDemo/node_modules/orionos-eve-core/src/Trigger.ts","/Applications/MAMP/htdocs/testDemo/node_modules/orionos-eve-core/src/BaseViewModel.ts","/Applications/MAMP/htdocs/testDemo/node_modules/orionos-eve-core/src/robot/api/AppUpdateManager.ts","/Applications/MAMP/htdocs/testDemo/node_modules/orionos-eve-core/src/robot/api/RobotSettingApi.ts","/Applications/MAMP/htdocs/testDemo/node_modules/orionos-eve-core/src/nlp/path/NlpPath.js","/Applications/MAMP/htdocs/testDemo/app/App.js","/Applications/MAMP/htdocs/testDemo/app/demo/DemoScreen.tsx","/Applications/MAMP/htdocs/testDemo/app/demo/DemoViewModel.ts","/Applications/MAMP/htdocs/testDemo/app/demo/DemoModel.ts","/Applications/MAMP/htdocs/testDemo/app/demo/DemoVoice.ts","/Applications/MAMP/htdocs/testDemo/app/demo/DemoTrigger.ts","/Applications/MAMP/htdocs/testDemo/package.json","/Applications/MAMP/htdocs/testDemo/app.json","/Applications/MAMP/htdocs/testDemo/app/AppDebug.js"],"sourcesContent":["/** @format */\n\nimport { AppRegistry } from 'react-native';\nimport App from './app/App';\nimport { appid } from './package';\nimport { name as appName } from './app.json';\nimport AppDebug from './app/AppDebug';\n\n//关闭其中某些yellow警告\nconsole.ignoredYellowBox = ['Warning: BackAndroid is deprecated. Please use BackHandler instead.','source.uri should not be an empty string','Invalid props.style key'];\n// 关闭全部yellow警告\nconsole.disableYellowBox = true;\n\n//上线使用\nAppRegistry.registerConfig([{\n    appKey: 'Demo',\n    component: () => App,\n    intent: 'demonstrate_app&open', //例如:'weather&get_weather'\n    appId: appid,\n    priority: 1\n}]);\n\n//Debug调试使用\nAppRegistry.registerComponent(appName, () => AppDebug);\n","/**\n Copyright (C) 2020 Beijing Kingsoft Internet Security Software Co., Ltd. and Beijing Orion Star Technology Co., Ltd\n Licensed under the Robot OS License Agreement (the \"License\").\n You may not use this file except in compliance with the License.\n You may obtain a copy of the License at  https://wiki.orionbase.cn/devguide/robot-osxu-ke-xie-yi.html\n Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport * from './Eve';\nexport * from './src/robot/api/AppManager';\nexport * from './src/robot/api/AppUpdateManager';\nexport * from './src/robot/api/RobotSettingApi';\nexport { NlpPath } from './src/nlp/path/NlpPath';\n","/**\n Copyright (C) 2020 Beijing Kingsoft Internet Security Software Co., Ltd. and Beijing Orion Star Technology Co., Ltd\n Licensed under the Robot OS License Agreement (the \"License\").\n You may not use this file except in compliance with the License.\n You may obtain a copy of the License at  https://wiki.orionbase.cn/devguide/robot-osxu-ke-xie-yi.html\n Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport {\n    DeviceEventEmitter,\n    EmitterSubscription,\n    NativeModules\n} from 'react-native';\nimport initialProps from '../../Initial';\nimport { DEV_ERROR_SUPPORT, newError, newWarn } from '../../utils/Utils';\n\nconst appManager = NativeModules.AppManager;\n\n/**\n * opk相关信息类\n */\nexport class AppManager {\n    private static readonly appId = null;\n    private static configUpdate: EmitterSubscription;\n    private static systemConfigUpdate: EmitterSubscription;\n\n    /**\n     * 获取当前opk　信息\n     * @returns opk 信息json串\n     */\n    public static getAppJson(): string {\n        if (this.appId) {\n            if (initialProps.isSupportPlugin) {\n                return appManager.getAppJsonByAppId(this.appId);\n            } else {\n                newError(DEV_ERROR_SUPPORT);\n                return '';\n            }\n        } else {\n            try {\n                return appManager.getAppJson();\n            } catch (error) {\n                newError(error);\n                return '';\n            }\n        }\n    }\n\n    /**\n     * 获取当前业务bundle　路径\n     * @returns bundle　路径\n     */\n    public static getOpkPath(): string {\n        if (this.appId) {\n            if (initialProps.isSupportPlugin) {\n                return appManager.getOpkPathByAppId(this.appId);\n            } else {\n                newError(DEV_ERROR_SUPPORT);\n                return '';\n            }\n        } else {\n            try {\n                return appManager.getOpkPath();\n            } catch (error) {\n                newError(error);\n                return '';\n            }\n        }\n    }\n\n    /**\n     * 获取当前opk　额外资源路径\n     * @returns 额外资源路径\n     */\n    public static getOpkExtraPath(): string {\n        if (this.appId) {\n            if (initialProps.isSupportPlugin) {\n                return appManager.getOpkExtraPathByAppId(this.appId);\n            } else {\n                newError(DEV_ERROR_SUPPORT);\n                return '';\n            }\n        } else {\n            try {\n                return appManager.getOpkExtraPath();\n            } catch (error) {\n                newError(error);\n                return '';\n            }\n        }\n    }\n\n    /**\n     * 获取当前加载角色的appid　支持debug\n     */\n    public static getAppId(): string {\n        if (this.appId) {\n            // v3 插件的 appid\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return this.appId!!;\n        }\n        if (initialProps.isSupportAppId) {\n            try {\n                let appJson = AppManager.getAppJson();\n                if (appJson) {\n                    return JSON.parse(appJson).appid;\n                }\n                newWarn('getAppId AppJson error');\n                return '';\n            } catch (error) {\n                newWarn(error);\n                return '';\n            }\n        }\n        return '';\n    }\n\n    /**\n     * 获取OPK图标\n     */\n    public static getAppIcon(): string {\n        if (initialProps.isSupportPlugin) {\n            return appManager.getAppIcon(this.appId);\n        } else {\n            newError(DEV_ERROR_SUPPORT);\n            return '';\n        }\n    }\n\n    /**\n     * 获取OPK配置\n     */\n    public static getAppConfig(): string {\n        if (initialProps.isSupportPlugin) {\n            return appManager.getAppConfig(this.appId);\n        } else {\n            newError(DEV_ERROR_SUPPORT);\n            return '';\n        }\n    }\n\n    /**\n     * 设置Opk\n     */\n    public static setAppConfig(key: string, value: string): void {\n        if (initialProps.isSupportConfigUpdateNotify && this.appId) {\n            appManager.setAppConfig(this.appId, key, value);\n        } else {\n            newError(DEV_ERROR_SUPPORT);\n        }\n    }\n\n    /**\n     * 设置App配置变化监听\n     */\n    public static setConfigUpdateListener(\n        onConfigUpdate: (config: any) => void\n    ) {\n        if (initialProps.isSupportConfigUpdateNotify && this.appId) {\n            if (this.configUpdate) {\n                this.configUpdate.remove();\n            }\n            this.configUpdate = DeviceEventEmitter.addListener(\n                'configUpdate_' + this.appId,\n                (data: any) => {\n                    let config = JSON.parse(data);\n                    onConfigUpdate(config);\n                }\n            );\n        } else {\n            newError(DEV_ERROR_SUPPORT);\n            return '';\n        }\n    }\n\n     /**\n     * 设置系统配置变化监听\n     * @param onConfigUpdate 监听系统配置,接收配置数据\n     *\n     */\n    public static setSystemConfigUpdateListener(\n        onConfigUpdate: (config: any) => void\n    ) {\n        let systemId = this.getSystemId();\n        if (initialProps.isSupportConfigUpdateNotify && systemId) {\n            if (this.systemConfigUpdate) {\n                this.systemConfigUpdate.remove();\n            }\n            this.systemConfigUpdate = DeviceEventEmitter.addListener(\n                'configUpdate_' + systemId,\n                (data: any) => {\n                    let config = JSON.parse(data);\n                    onConfigUpdate(config);\n                }\n            );\n        } else {\n            newError(DEV_ERROR_SUPPORT);\n            return '';\n        }\n    }\n\n    /**\n     * 获取系统配置ID\n     * 作用: 小程序下发的系统配置ID\n    */\n    private static getSystemId(): string{\n        if (initialProps.isSupportSystemId) {\n            return appManager.getSystemId();\n        } else {\n            newError(DEV_ERROR_SUPPORT);\n            return '';\n        }\n    }\n\n    /**\n     * 重启OPK\n     */\n    public static restartApp() {\n        if (initialProps.isSupportPlugin) {\n            appManager.restartApp(this.appId);\n        } else {\n            newError(DEV_ERROR_SUPPORT);\n        }\n    }\n\n    public static startApp(appId?: string) {\n        if (initialProps.isSupportNlpParser) {\n            appManager.startApp(appId);\n        } else {\n            let msg = 'The device does not support startApp API.';\n            newError(msg);\n        }\n    }\n\n    public static destroyApp(appId?: string) {\n        if (initialProps.isSupportNlpParser) {\n            appManager.destroyApp(appId);\n        } else {\n            let msg = 'The device does not support destroyApp API.';\n            newWarn(msg);\n        }\n    }\n\n    public static moveToForeground(appId?: string) {\n        if (initialProps.isSupportNlpParser) {\n            appManager.moveToForeground(appId);\n        } else {\n            let msg = 'The device does not support moveToForeground API.';\n            newWarn(msg);\n        }\n    }\n\n    public static moveToBack(appId?: string) {\n        if (initialProps.isSupportNlpParser) {\n            appManager.moveToBack(appId);\n        } else {\n            let msg = 'The device does not support moveToBack API.';\n            newWarn(msg);\n        }\n    }\n\n    public static setAppPath(appId?: string, path?: string) {\n        if (initialProps.isSupportNlpParser) {\n            appManager.setAppPath(appId, path);\n        } else {\n            let msg = 'The device does not support setAppPath API.';\n            newError(msg);\n        }\n    }\n\n    public static setAppVersion(appId?: string, version?: string) {\n        let msg = 'The device does not support setAppVersion API.';\n        newWarn(msg);\n    }\n\n    /**\n     * 可变参数动态设置当前opk 的 nlp state\n     * @param appId 当前opk 的 appId\n     * @param path 当前界面的 path\n     * @param subPage 预留三级界面\n     * @param version opk 版本\n     */\n    public static setAppInfo(\n        appId?: string,\n        path?: string,\n        subPage?: string,\n        version?: string\n    ) {\n        if (initialProps.isSupportNlpParser) {\n            if (appId) {\n                appManager.setAsyncCustomNlpData(\n                    'opt_scene_switch',\n                    JSON.stringify({\n                        // eslint-disable-next-line @typescript-eslint/camelcase\n                        app_id: appId,\n                        path: path == undefined ? '' : path,\n                        subPage: subPage == undefined ? '' : subPage,\n                        version: version == undefined ? '' : version\n                    })\n                );\n            } else {\n                let msg = 'nlp_launcher_:setAppInfo appId is null';\n                newError(msg);\n            }\n        } else {\n            let msg = 'The device does not support setAsyncCustomNlpData API.';\n            newError(msg);\n        }\n    }\n}\n","/**\n Copyright (C) 2020 Beijing Kingsoft Internet Security Software Co., Ltd. and Beijing Orion Star Technology Co., Ltd\n Licensed under the Robot OS License Agreement (the \"License\").\n You may not use this file except in compliance with the License.\n You may obtain a copy of the License at  https://wiki.orionbase.cn/devguide/robot-osxu-ke-xie-yi.html\n Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { DeviceEventEmitter } from 'react-native';\nimport {\n    NavigationScreenProp,\n    NavigationState,\n    NavigationParams,\n    NavigationNavigateActionPayload,\n    NavigationReplaceActionPayload\n} from 'react-navigation';\n\nimport { Crash } from './utils/Crash';\nimport { speechApi } from './robot/api/NativeApi';\nimport { emojiPlayerModel } from './models/EmojiPlayerModel';\nimport { NlpScene } from './nlp/scene/NlpScene';\nimport { triggerManager, TriggerNavigate } from './TriggerManager';\n\nexport enum TriggerType {\n    api = 1,\n    voice,\n    ui,\n    deepLink\n}\n\nexport interface TriggerProtocol {\n    channel: string;\n    type: TriggerType;\n    eventId: number;\n    result: any;\n    goBack?: boolean;\n    putStack?: boolean;\n}\n\nexport abstract class Trigger {\n    protected _channel: string;\n    private readonly appId = null;\n\n    public constructor(channel: string) {\n        if (this.appId) {\n            this._channel = this.appId + '_' + channel;\n        } else {\n            this._channel = channel;\n        }\n        triggerManager.addTrigger(this);\n    }\n\n    public getChannel = (): string => {\n        return this._channel;\n    };\n\n    public dispatch = (data: TriggerProtocol): void => {\n        data.eventId = data.eventId || -1;\n        this.trigger(data);\n    };\n\n    protected goBack = (data: TriggerProtocol): void => {\n        if (triggerManager.type === TriggerNavigate.stackNavigate) {\n            triggerManager.getNavigation().goBack();\n            return;\n        }\n        let stackInfo = triggerManager.popRouteName();\n        if (stackInfo) {\n            data.result = stackInfo.protocol && stackInfo.protocol.result;\n            data.goBack = true;\n            this._trigger(stackInfo.name, data);\n        }\n    };\n\n    protected _trigger = (\n        router: string,\n        data: TriggerProtocol,\n        goBack = false\n    ): void => {\n        let navigation = triggerManager.getNavigation();\n        let current = navigation.state;\n        data.channel = current.routeName;\n        console.log('caller: ', this._channel, current, data);\n        Crash.putCurrentScenesState({\n            Name: router\n        });\n        //todo 切换失败的处理\n        NlpScene.switchScene(router);\n        /**\n         State: navigation.state,\n         Protocol: data*/\n        if (triggerManager.middleware) {\n            triggerManager.middleware(current.routeName, router, data);\n        }\n        if (triggerManager.type === TriggerNavigate.replaceNavigate) {\n            navigation.replace(router, data);\n        } else {\n            navigation.navigate(router, data);\n        }\n        if (data.goBack !== true) {\n            if (data.channel !== router) {\n                let existRoute = triggerManager.isRouteExistInStack(router);\n                if (existRoute) {\n                    triggerManager.popTo(router);\n                } else {\n                    if (data.putStack !== false) {\n                        triggerManager.pushRouteName(data.channel, data);\n                    }\n                }\n            }\n        }\n        this.navSwitch(data.channel, router);\n    };\n\n    public stopTTS = (): void => {\n        speechApi.stopTTS();\n    };\n\n    public playTextWithEmoji = (listenerId: number, text: string): void => {\n        //显示大眼睛\n        emojiPlayerModel.setShow(true);\n        speechApi.playText(listenerId, text);\n    };\n\n    abstract trigger(protocol: TriggerProtocol): void | boolean;\n    abstract navSwitch(from: string, to: string): void;\n}\n","/**\n Copyright (C) 2020 Beijing Kingsoft Internet Security Software Co., Ltd. and Beijing Orion Star Technology Co., Ltd\n Licensed under the Robot OS License Agreement (the \"License\").\n You may not use this file except in compliance with the License.\n You may obtain a copy of the License at  https://wiki.orionbase.cn/devguide/robot-osxu-ke-xie-yi.html\n Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { DeviceEventEmitter } from 'react-native';\nimport { TriggerType } from './Trigger';\nimport { BaseVoice, SpeakInfo } from './BaseVoice';\nimport { BaseComponent, BaseComponentProps } from './BaseComponent';\nimport { recognitionModel } from './models/RecognitionModel';\nimport { emojiPlayerModel } from './models/EmojiPlayerModel';\nimport { faceParticleModel } from './models/FaceParticleModel';\n\nexport abstract class BaseViewModel {\n    protected _channel: string;\n    protected _voice?: BaseVoice;\n    protected _view?: BaseComponent<\n        BaseComponentProps,\n        BaseViewModel,\n        BaseVoice\n    >;\n    protected status: string;\n    protected recognitionStore = recognitionModel;\n    protected emojiPlayerStore = emojiPlayerModel;\n    protected faceParticleStore = faceParticleModel;\n    private readonly appId = null;\n\n    public constructor(channel: string) {\n        if (this.appId) {\n            this._channel = this.appId + '_' + channel;\n        } else {\n            this._channel = channel;\n        }\n        this.status = 'stop';\n    }\n\n    public setVoice = (voice: BaseVoice): BaseViewModel => {\n        this._voice = voice;\n        this._voice && this._voice.start();\n        return this;\n    };\n\n    public setSpeakInfoMap = (speakInfoMap: Map<number, SpeakInfo>): void => {\n        if (this._voice) {\n            this._voice.setSpeakInfoMap(speakInfoMap);\n        }\n    };\n\n    public updateSpeakInfo = (speakInfo: SpeakInfo): void => {\n        if (this._voice) {\n            this._voice.updateSpeakInfo(speakInfo);\n        }\n    };\n\n    // setTrigger = (trigger: Trigger) => {\n    //     this._trigger = trigger;\n    //     return this;\n    // };\n\n    public setView = (\n        view: BaseComponent<BaseComponentProps, BaseViewModel, BaseVoice>\n    ): BaseViewModel => {\n        this._view = view;\n        return this;\n    };\n\n    public getChannel = (): string => {\n        return this._channel;\n    };\n\n    public _trigger = (type: TriggerType, eventId: number, data: any): void => {\n        // this.onStop();\n        let protocol = {\n            channel: this._channel,\n            eventId: eventId,\n            type: type,\n            result: data\n        };\n        console.log('trigger: ', protocol);\n        DeviceEventEmitter.emit('__trigger__', protocol);\n    };\n\n    public _uiTrigger = (eventId: number, data: any): void => {\n        this._trigger(TriggerType.ui, eventId, data);\n    };\n\n    public _voiceTrigger = (\n        eventId: number,\n        data: any,\n        queryType?: number\n    ): void => {\n        if (queryType === 2) {\n            this._trigger(TriggerType.ui, eventId, data);\n        } else {\n            this._trigger(TriggerType.voice, eventId, data);\n        }\n    };\n\n    public _apiTrigger = (eventId: number, data: any): void => {\n        this._trigger(TriggerType.api, eventId, data);\n    };\n\n    public start = (): void => {\n        if (this.status === 'stop') {\n            this.status = 'start';\n            // this._trigger && triggerManager.addTrigger(this._trigger);\n            this._voice && this._voice.start();\n            this.onStart();\n        }\n    };\n\n    public stop = (): void => {\n        if (this.status === 'start') {\n            this.status = 'stop';\n            // this._trigger && triggerManager.removeTrigger(this._trigger);\n            this._voice && this._voice.stop();\n            this.onStop();\n            this._voice = undefined;\n            this._view = undefined;\n        }\n    };\n\n    abstract onStart(): void;\n    abstract onStop(): void;\n\n    public showEmojiPlayer = (): void => {\n        this.emojiPlayerStore.setShow(true);\n    };\n\n    public hideEmojiPlayer = (): void => {\n        this.emojiPlayerStore.setShow(false);\n    };\n\n    public startEmojiTalk = (): void => {\n        this.emojiPlayerStore.setTalk(true);\n    };\n\n    public stopEmojiTalk = (): void => {\n        this.emojiPlayerStore.setTalk(false);\n    };\n\n    public showRecognition = (): void => {\n        this.recognitionStore.setShow(true);\n    };\n\n    public hideRecognition = (): void => {\n        this.recognitionStore.setShow(false);\n    };\n\n    public showFaceParticle = (): void => {\n        this.faceParticleStore.setHide(false);\n    };\n\n    public hideFaceParticle = (): void => {\n        this.faceParticleStore.setHide(true);\n    };\n\n    public showEyeCenter = (): void => {\n        this.faceParticleStore.setShowCenter(true);\n    };\n\n    public showEyeLeft = (): void => {\n        this.faceParticleStore.setShowCenter(false);\n    };\n\n    public showBackgroundStar = (): void => {\n        this.faceParticleStore.setShowStar(true);\n    };\n\n    public hideBackgroundStar = (): void => {\n        this.faceParticleStore.setShowStar(false);\n    };\n}\n","/**\n Copyright (C) 2020 Beijing Kingsoft Internet Security Software Co., Ltd. and Beijing Orion Star Technology Co., Ltd\n Licensed under the Robot OS License Agreement (the \"License\").\n You may not use this file except in compliance with the License.\n You may obtain a copy of the License at  https://wiki.orionbase.cn/devguide/robot-osxu-ke-xie-yi.html\n Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport {\n    DeviceEventEmitter,\n    EmitterSubscription,\n    NativeModules\n} from 'react-native';\nimport initialProps from '../../Initial';\nimport { DEV_ERROR_SUPPORT, newError } from '../../utils/Utils';\n\nconst updateManager = NativeModules.AppUpdateManager;\n\n/**\n * opk更新相关类（主要用于插件的更新及卸载）\n */\nexport class AppUpdateManager {\n    private static readonly appId = null;\n\n    private static updateProgress: EmitterSubscription;\n    private static updateResult: EmitterSubscription;\n\n    /**\n     * 当前是否正在进行初始化安装\n     * @returns\n     */\n    public static isInitInstall(): boolean {\n        if (initialProps.isSupportPlugin) {\n            return updateManager.isInitInstall(this.appId);\n        } else {\n            newError(DEV_ERROR_SUPPORT);\n            return false;\n        }\n    }\n\n    /**\n     * 是否正在进行更新\n     * @returns\n     */\n    public static isUpdating(): boolean {\n        if (initialProps.isSupportPlugin) {\n            return updateManager.isUpdating(this.appId);\n        } else {\n            newError(DEV_ERROR_SUPPORT);\n            return false;\n        }\n    }\n\n    /**\n     * 检查是否需要更新\n     * @returns\n     */\n    public static checkUpdate(): boolean {\n        if (initialProps.isSupportPlugin) {\n            return updateManager.checkUpdate(this.appId);\n        } else {\n            newError(DEV_ERROR_SUPPORT);\n            return false;\n        }\n    }\n\n    /**\n     * 设置是否允许更新\n     * @param enable\n     */\n    public static setUpdateEnable(enable: boolean) {\n        if (initialProps.isSupportDisableUpdate) {\n            updateManager.setUpdateEnable(this.appId, enable);\n        } else {\n            newError(DEV_ERROR_SUPPORT);\n        }\n    }\n\n    /**\n     * 设置更新进度监听\n     * @param listener\n     */\n    public static setUpdateListener(\n        updateStatus: (\n            count: number,\n            index: number,\n            appName: string,\n            oper: string\n        ) => void,\n        updateResult: (result: boolean, message: string) => void\n    ) {\n        if (!initialProps.isSupportPlugin) {\n            newError(DEV_ERROR_SUPPORT);\n            return;\n        }\n\n        if (this.updateProgress) {\n            this.updateProgress.remove();\n        }\n\n        this.updateProgress = DeviceEventEmitter.addListener(\n            'updateProgress',\n            (data: any) => {\n                let status = JSON.parse(data);\n                updateStatus(\n                    status.count,\n                    status.index,\n                    status.appName,\n                    status.oper\n                );\n            }\n        );\n\n        if (this.updateResult) {\n            this.updateResult.remove();\n        }\n\n        this.updateResult = DeviceEventEmitter.addListener(\n            'updateResult',\n            (data: any) => {\n                let result = JSON.parse(data);\n                updateResult(result.result, result.message);\n            }\n        );\n\n        updateManager.setUpdateListener();\n    }\n\n    /**\n     * 开始更新\n     */\n    public static startUpdate() {\n        if (initialProps.isSupportPlugin) {\n            updateManager.startUpdate(this.appId);\n        } else {\n            newError(DEV_ERROR_SUPPORT);\n        }\n    }\n\n    /**\n     * 更新重试\n     */\n    public static retryUpdate() {\n        if (initialProps.isSupportPlugin) {\n            updateManager.retryUpdate(this.appId);\n        } else {\n            newError(DEV_ERROR_SUPPORT);\n        }\n    }\n\n    public static cancelUpdate() {\n        if (initialProps.isSupportPlugin) {\n            updateManager.cancelUpdate(this.appId);\n        } else {\n            newError(DEV_ERROR_SUPPORT);\n        }\n    }\n}\n","/**\n Copyright (C) 2020 Beijing Kingsoft Internet Security Software Co., Ltd. and Beijing Orion Star Technology Co., Ltd\n Licensed under the Robot OS License Agreement (the \"License\").\n You may not use this file except in compliance with the License.\n You may obtain a copy of the License at  https://wiki.orionbase.cn/devguide/robot-osxu-ke-xie-yi.html\n Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { NativeModules } from 'react-native';\nimport initialProps from '../../Initial';\nimport { newError } from '../../utils/Utils';\n\nconst robotSettingApi = NativeModules.RobotSettingApi;\n\nexport class RobotSettingApi {\n    private static readonly appId = null;\n\n    public static getRobotString(key: string): Promise<string> {\n        if (initialProps.isSupportRobotSettingApi) {\n            return robotSettingApi.getRobotString(key);\n        } else {\n            let msg = 'This system version does not support getRobotString.';\n            newError(msg);\n            return Promise.reject(msg);\n        }\n    }\n\n    public static getRobotFloat(key: string): Promise<number> {\n        if (initialProps.isSupportRobotSettingApi) {\n            return robotSettingApi.getRobotFloat(key);\n        } else {\n            let msg = 'This system version does not support getRobotFloat.';\n            newError(msg);\n            return Promise.reject(msg);\n        }\n    }\n\n    public static getRobotInt(key: string): Promise<number> {\n        if (initialProps.isSupportRobotSettingApi) {\n            return robotSettingApi.getRobotInt(key);\n        } else {\n            let msg = 'This system version does not support getRobotInt.';\n            newError(msg);\n            return Promise.reject(msg);\n        }\n    }\n\n    public static setRobotString(key: string, value: string): void {\n        if (initialProps.isSupportRobotSettingApi) {\n            if (this.appId && initialProps.isSupportRobotSettingPermission) {\n                robotSettingApi.setRobotString(this.appId, key, value);\n            } else {\n                robotSettingApi.setRobotString(key, value);\n            }\n        } else {\n            newError('This system version does not support setRobotString.');\n        }\n    }\n\n    public static setRobotFloat(key: string, value: number): void {\n        if (initialProps.isSupportRobotSettingApi) {\n            if (this.appId && initialProps.isSupportRobotSettingPermission) {\n                robotSettingApi.setRobotFloat(this.appId, key, value);\n            } else {\n                robotSettingApi.setRobotFloat(key, value);\n            }\n        } else {\n            newError('This system version does not support setRobotFloat.');\n        }\n    }\n\n    public static setRobotInt(key: string, value: number): void {\n        if (initialProps.isSupportRobotSettingApi) {\n            if (this.appId && initialProps.isSupportRobotSettingPermission) {\n                robotSettingApi.setRobotInt(this.appId, key, value);\n            } else {\n                robotSettingApi.setRobotInt(key, value);\n            }\n        } else {\n            newError('This system version does not support setRobotInt.');\n        }\n    }\n\n    public static registerRobotSettingListener(\n        callbackId: number,\n        keys: string[]\n    ): void {\n        if (initialProps.isSupportRobotSettingApi) {\n            robotSettingApi.registerRobotSettingListener(callbackId, keys);\n        } else {\n            newError(\n                'This system version does not support registerRobotSettingListener.'\n            );\n        }\n    }\n\n    public static unRegisterRobotSettingListener(callbackId: number): void {\n        if (initialProps.isSupportRobotSettingApi) {\n            robotSettingApi.unRegisterRobotSettingListener(callbackId);\n        } else {\n            newError(\n                'This system version does not support unRegisterRobotSettingListener.'\n            );\n        }\n    }\n\n    public static isCharging(): Promise<boolean> {\n        if (initialProps.robotSettingApiVersion >= 1) {\n            return robotSettingApi.isCharging();\n        } else {\n            let msg = 'This system version does not support isCharging.';\n            newError(msg);\n            return Promise.reject(msg);\n        }\n    }\n\n    public static clearSettingsListener(): void {\n        if (initialProps.robotSettingApiVersion >= 1) {\n            robotSettingApi.clearSettingsListener();\n        } else {\n            newError(\n                'This system version does not support unRegisterRobotSettingListener.'\n            );\n        }\n    }\n}\n","/*\n * Copyright (C) 2017 OrionStar Technology Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { AppManager } from '../../robot/api/AppManager';\n\nconst TAG = 'NlpPath';\n\n/**\n * OPK的id\n * @type {string}\n */\nconst appId = AppManager.getAppId();\n\n/**\n * 默认path\n *\n * 默认path情况下表示支持所有语音指令\n * @type {string}\n */\nconst defaultPath = 'main';\n\n/**\n * 当前所处的path\n * @type {null}\n */\nlet path = null;\n\nfunction setPath(pathName, action) {\n    console.log(TAG, 'Set path : ' + pathName + '   ' + action + '   ' + appId);\n\n    AppManager.setAppInfo(appId, pathName);\n    if (action) {\n        action.start();\n    }\n}\n\n/**\n * Path显示时候的处理\n * @param pathName\n * @param action\n */\nfunction onPathMount(pathName, action) {\n    console.log(\n        TAG,\n        'On path mount : ' + pathName + '   ' + action + '   ' + appId\n    );\n\n    let prePath = path;\n    path = {\n        pathName: pathName,\n        action: action,\n        pre: prePath\n    };\n\n    setPath(pathName, action);\n}\n\n/**\n * Path隐藏时候的处理\n * @param pathName\n * @param action\n */\nfunction onPathUnmount(pathName, action) {\n    console.log(TAG, 'On path unmount : ' + pathName);\n    if (action) {\n        action.stop();\n    }\n\n    //界面切换的时候先执行的是新界面的mount，后执行老界面的unmount\n    if (path.pre && path.pre.pathName === pathName) {\n        path.pre = path.pre.pre;\n        return;\n    }\n\n    if (path.pathName === pathName) {\n        if (path.pre) {\n            path = path.pre;\n            setPath(path.pathName, path.action);\n        } else {\n            setPath(defaultPath);\n        }\n    }\n}\n\n/**\n * 作为NlpPath处理的子View的包装类\n */\nclass NlpViewPath extends React.Component {\n    constructor(props) {\n        super(props);\n        this.pathName = this.props.pathName;\n        this.action = this.props.action;\n    }\n\n    componentWillMount() {\n        onPathMount(this.pathName, this.action);\n    }\n\n    componentWillUnmount() {\n        onPathUnmount(this.pathName, this.action);\n    }\n\n    render() {\n        return <>{this.props.children}</>;\n    }\n}\n\n/**\n * NlpPath修饰在类方法或属性上的处理\n *\n * @param target 类的原型\n * @param name   类方法或属性名称\n * @param descriptor  被装饰参数的属性，descriptor.value为函数本体\n * @param pathName NlpPath名称\n * @param action 处理当前Path支持的Action的对象，生命周期为start和stop\n */\nfunction decoratorViewPath(target, name, descriptor, pathName, action) {\n    console.log('NlpPath view ********** : ' + pathName);\n    const old = descriptor.value;\n\n    descriptor.value = function(...arg) {\n        let result = old.apply(this, arg);\n        return React.createElement(\n            NlpViewPath,\n            { ...arg, pathName: pathName, action: action },\n            result\n        );\n    };\n}\n\n/**\n * NlpPath修饰在类上的处理\n *\n * @param target 类对象本身\n * @param pathName NlpPath名称\n * @param action 处理当前Path支持的Action的对象，生命周期为start和stop\n */\nfunction decoratorPath(target, pathName, action) {\n    console.log('NlpPath class ********** : ' + pathName);\n    const targetWM = target.prototype.componentWillMount;\n    target.prototype.componentWillMount = function() {\n        targetWM && targetWM.call(this);\n        onPathMount(pathName, action);\n    };\n\n    const targetWUM = target.prototype.componentWillUnmount;\n    target.prototype.componentWillUnmount = function() {\n        targetWUM && targetWUM.call(this);\n        onPathUnmount(pathName, action);\n    };\n}\n\n/**\n * 包装可作为NlpPath的类或类的方法\n *\n * @param pathName nlp path名称\n * @param action   action处理\n * @param taskFlow 多轮对话\n */\nfunction NlpPath(pathName, action = null, taskFlow = null) {\n    return function(target, name, descriptor) {\n        if (descriptor) {\n            decoratorViewPath(target, name, descriptor, pathName, action);\n        } else {\n            decoratorPath(target, pathName, action);\n        }\n    };\n}\n\nexport { NlpPath };\n","import QRCode from 'react-native-qrcode-svg';\nimport { BaseComponent } from 'orionos-eve-core';\nimport React from 'react';\nimport { DemoScreen } from './demo/DemoScreen';\n\n\n/**\n * 主界面\n */\nexport default class App extends BaseComponent {\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        super.componentDidMount();\n    }\n\n    componentWillMount() {\n        console.log();\n    }\n\n    componentWillUnmount() {\n        super.componentWillUnmount();\n    }\n\n    render() {\n        //return (<DemoScreen {...this.props}/>);\n        return (\n            <QRCode\n              value=\"http://awesome.link.qr\"\n            />);\n    }\n}\n","import { BaseComponent, triggerManager, BaseComponentProps } from 'orionos-eve-core';\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { Text, View } from 'react-native';\nimport { DemoViewModel } from './DemoViewModel';\nimport { DemoVoice } from './DemoVoice';\nimport { DemoTrigger } from './DemoTrigger';\nimport { demoModel } from './DemoModel';\n\n//注册trigger跳转，必须添加，否则trigger无效\ntriggerManager.addTrigger(new DemoTrigger());\n\n/**\n * 功能UI界面\n */\n@observer\nexport class DemoScreen extends BaseComponent<BaseComponentProps, DemoViewModel, DemoVoice> {\n\n    public viewModel: DemoViewModel;\n\n    public constructor(props: BaseComponentProps) {\n        super(props);\n\n        this.viewModel = new DemoViewModel();\n        let voice = new DemoVoice(this.viewModel);\n\n        //关联ViewModel及Voice的生命周期到当前界面上\n        this.setViewModel(this.viewModel);\n        this.setVoice(voice);\n    }\n\n    public componentDidMount() {\n        //重写界面的didMount，必须调用super\n        super.componentDidMount();\n    }\n\n    public componentWillMount() {\n\n    }\n\n    public componentWillUnmount() {\n        //重写界面的Unmount，必须调用super\n        super.componentWillUnmount();\n    }\n\n    public render() {\n        return (\n            <View>\n                <Text style={{ fontSize: 17, color: 'red' }}> {demoModel.getInfoText()}</Text>\n            </View>\n        );\n\n    }\n}\n","import { BaseViewModel } from 'orionos-eve-core';\nimport { demoModel } from './DemoModel';\n\n/**\n * 业务逻辑\n */\nexport class DemoViewModel extends BaseViewModel {\n\n    public constructor() {\n        //super参数为ViewModel与Trigger相互通信的标识，必须保证与Trigger的一致\n        super('Demo');\n    }\n\n    public onStart() {\n\n    }\n\n    public onStop() {\n\n    }\n\n    public exit() {\n        //发送消息到Trigger中，eventId为消息id, data为携带的数据\n        this._apiTrigger(1001, '');\n    }\n\n    public showSpeechText(text: string) {\n        console.log('DemoVoice : set ' + text);\n        demoModel.setInfoText(text);\n    }\n\n}\n","/**\n Copyright (C) 2020 Beijing Kingsoft Internet Security Software Co., Ltd. and Beijing Orion Star Technology Co., Ltd\n Licensed under the Robot OS License Agreement (the \"License\").\n You may not use this file except in compliance with the License.\n You may obtain a copy of the License at  https://wiki.orionbase.cn/devguide/robot-osxu-ke-xie-yi.html\n Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { observable, action } from 'mobx';\n\n\nexport class DemoModel {\n    @observable private infoText = 'Hello 鹰之眼!';\n\n    @action\n    public setInfoText(infoText: string) {\n        console.log('DemoVoice Set info text : ' + infoText);\n        this.infoText = infoText;\n    }\n\n    public getInfoText(): string {\n        return this.infoText;\n    }\n}\n\nexport const demoModel = new DemoModel();\n","import { BaseVoice } from 'orionos-eve-core';\nimport { DemoViewModel } from './DemoViewModel';\n\n/**\n * 语音处理\n */\nexport class DemoVoice extends BaseVoice {\n\n    private viewModel: DemoViewModel;\n\n    public constructor(viewModel: DemoViewModel) {\n        super('DemoVoice');\n        this.viewModel = viewModel;\n    }\n\n    /**\n     * 接收语音指令\n     *\n     * @param intent 语音指令标识\n     * @param result 语音识别的数据\n     * @param id\n     * @param text 语音识别文本\n     *\n     * @return {boolean}\n     *         true 表示该语音指令已被处理，会拦截掉语音指令\n     *         false 语音指令未被处理，交给其它opk处理\n     */\n    public onListenCallback(intent: string, result: any, id: number, text: string): boolean {\n        console.log('DemoVoice : ' + text);\n        switch (intent) {\n            case 'general_command&stop':\n                this.viewModel.exit();\n                return true;\n\n            default:\n                this.viewModel.showSpeechText(`${intent} : ${text}`);\n                return true;\n        }\n    }\n\n    public speak(): void {\n    }\n\n}\n","import { Trigger, TriggerProtocol } from 'orionos-eve-core';\n\n/**\n * 页面路由跳转，可从业务流程切换到主流程\n */\nexport class DemoTrigger extends Trigger {\n\n    public constructor() {\n        //super参数为Trigger与ViewModel相互通信的标识，必须保证与ViewModel的一致\n        super('Demo');\n    }\n\n    public navSwitch(from: string, to: string): void {\n    }\n\n    /**\n     * 接收处理ViewModel发送过来的消息\n     *\n     * @param protocol\n     */\n    public trigger(protocol: TriggerProtocol): void | boolean {\n        switch (protocol.eventId) {\n            case 1001:\n                //页面路由跳转，单独调试的时候无效， 可能会出现红屏，在作为插件安装后，可跳转其它功能\n                //跳转到首页，home为在index.js中注册的appKey\n                this._trigger('home', protocol);\n                break;\n        }\n        return undefined;\n    }\n\n}\n","{\n\t\"name\": \"testDemo\",\n\t\"version\": \"0.0.2\",\n\t\"appid\": \"system_2d01160272669884793b18983a46dcd0\",\n\t\"private\": true,\n\t\"commitId\": \"\",\n\t\"opkType\": \"plugin\",\n\t\"scripts\": {\n\t\t\"run\": \"orionos-sh run\",\n\t\t\"pack\": \"orionos-sh pack\"\n\t},\n\t\"dependencies\": {\n\t\t\"@types/react-native-snap-carousel\": \"^3.7.4\",\n\t\t\"eslint-plugin-orion-os\": \"^0.8.0\",\n\t\t\"orionos-eve-core\": \"2.3.0\",\n\t\t\"react-native-snap-carousel\": \"^3.8.0\",\n\t\t\"rn-viewpager\": \"^1.2.9\"\n\t},\n\t\"devDependencies\": {\n\t\t\"@babel/core\": \"7.4.5\",\n\t\t\"@babel/plugin-proposal-class-properties\": \"7.4.4\",\n\t\t\"@babel/plugin-proposal-decorators\": \"7.4.4\",\n\t\t\"@babel/preset-env\": \"7.4.5\",\n\t\t\"@babel/preset-react\": \"7.0.0\",\n\t\t\"@babel/runtime\": \"7.4.5\",\n\t\t\"@types/jest\": \"24.0.13\",\n\t\t\"@types/react\": \"16.8.21\",\n\t\t\"@types/react-native\": \"0.57.65\",\n\t\t\"@types/react-test-renderer\": \"16.8.1\",\n\t\t\"babel-eslint\": \"10.0.1\",\n\t\t\"babel-jest\": \"24.8.0\",\n\t\t\"eslint\": \"5.16.0\",\n\t\t\"eslint-config-koot\": \"0.1.0\",\n\t\t\"jest\": \"24.8.0\",\n\t\t\"jsc-android\": \"236355.1.1\",\n\t\t\"lint-staged\": \"8.1.6\",\n\t\t\"metro-react-native-babel-preset\": \"0.53.1\",\n\t\t\"prettier\": \"1.17.0\",\n\t\t\"react-native-typescript-transformer\": \"1.2.12\",\n\t\t\"react-test-renderer\": \"16.8.3\",\n\t\t\"ts-jest\": \"24.0.0\",\n\t\t\"typescript\": \"3.9.9\"\n\t},\n\t\"jest\": {\n\t\t\"jest\": {\n\t\t\t\"preset\": \"react-native\",\n\t\t\t\"moduleFileExtensions\": [\n\t\t\t\t\"ts\",\n\t\t\t\t\"tsx\",\n\t\t\t\t\"js\"\n\t\t\t],\n\t\t\t\"transform\": {\n\t\t\t\t\"^.+\\\\.(js)$\": \"<rootDir>/node_modules/babel-jest\",\n\t\t\t\t\"\\\\.(ts|tsx)$\": \"<rootDir>/node_modules/ts-jest/preprocessor.js\"\n\t\t\t},\n\t\t\t\"testRegex\": \"(/__tests__/.*|\\\\.(test|spec))\\\\.(ts|tsx|js)$\",\n\t\t\t\"testPathIgnorePatterns\": [\n\t\t\t\t\"\\\\.snap$\",\n\t\t\t\t\"<rootDir>/node_modules/\"\n\t\t\t],\n\t\t\t\"cacheDirectory\": \".jest/cache\"\n\t\t}\n\t},\n\t\"husky\": {\n\t\t\"hooks\": {\n\t\t\t\"pre-commit\": \"lint-staged\"\n\t\t}\n\t},\n\t\"lint-staged\": {\n\t\t\"*.{js,jsx,ts,tsx,cjs,mjs}\": [\n\t\t\t\"eslint --fix\",\n\t\t\t\"prettier --write\",\n\t\t\t\"git add\"\n\t\t],\n\t\t\"*.{json,md,css,less,sass,scss}\": [\n\t\t\t\"prettier --write\",\n\t\t\t\"git add\"\n\t\t]\n\t}\n}\n","{\n  \"name\": \"Eve\",\n  \"displayName\": \"Eve\"\n}\n","import { BaseComponent, triggerManager, listenersManager } from 'orionos-eve-core';\nimport React from 'react';\nimport { DeviceEventEmitter, Text, View } from 'react-native';\nimport { DemoScreen } from './demo/DemoScreen';\n\n/**\n * Debug调试界面\n */\nexport default class AppDebug extends BaseComponent {\n\n    constructor(props) {\n        super(props);\n\n        //在单独调试的时候需要添加，否则无法接收语音指令\n        listenersManager.listen(DeviceEventEmitter);\n        triggerManager.start();\n    }\n\n    componentDidMount() {\n        super.componentDidMount();\n    }\n\n    componentWillMount() {\n    }\n\n    componentWillUnmount() {\n        super.componentWillUnmount();\n    }\n\n    render() {\n        return (<DemoScreen/>);\n    }\n}\n"],"names":["_reactNative","r","d","_App","_interopRequireDefault","_package","_app","_AppDebug","console","ignoredYellowBox","disableYellowBox","AppRegistry","registerConfig","appKey","component","App","intent","appId","appid","priority","registerComponent","appName","AppDebug","_Eve","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","e","defineProperty","enumerable","get","_AppManager","_AppUpdateManager","_RobotSettingApi","_NlpPath","_Initial","_Utils","appManager","NativeModules","AppManager","getAppJson","this","initialProps","isSupportPlugin","getAppJsonByAppId","newError","DEV_ERROR_SUPPORT","error","getOpkPath","getOpkPathByAppId","getOpkExtraPath","getOpkExtraPathByAppId","getAppId","isSupportAppId","appJson","JSON","parse","newWarn","getAppIcon","getAppConfig","setAppConfig","value","isSupportConfigUpdateNotify","setConfigUpdateListener","onConfigUpdate","configUpdate","remove","DeviceEventEmitter","addListener","data","config","setSystemConfigUpdateListener","systemId","getSystemId","systemConfigUpdate","isSupportSystemId","restartApp","startApp","isSupportNlpParser","destroyApp","moveToForeground","moveToBack","setAppPath","path","setAppVersion","version","setAppInfo","subPage","setAsyncCustomNlpData","stringify","app_id","undefined","TriggerType","_Crash","_NativeApi","_EmojiPlayerModel","_NlpScene","_TriggerManager","Trigger","channel","_this","_classCallCheck2","default","getChannel","_channel","dispatch","eventId","trigger","goBack","triggerManager","type","TriggerNavigate","stackNavigate","stackInfo","popRouteName","result","protocol","_trigger","name","getNavigation","router","arguments","length","navigation","current","state","routeName","log","Crash","putCurrentScenesState","Name","NlpScene","switchScene","middleware","replaceNavigate","replace","navigate","isRouteExistInStack","popTo","putStack","pushRouteName","navSwitch","stopTTS","speechApi","playTextWithEmoji","listenerId","text","emojiPlayerModel","setShow","playText","addTrigger","_Trigger","_RecognitionModel","_FaceParticleModel","BaseViewModel","recognitionStore","recognitionModel","emojiPlayerStore","faceParticleStore","faceParticleModel","setVoice","voice","_voice","start","setSpeakInfoMap","speakInfoMap","updateSpeakInfo","speakInfo","setView","view","_view","emit","_uiTrigger","ui","_voiceTrigger","queryType","_apiTrigger","api","status","onStart","stop","onStop","showEmojiPlayer","hideEmojiPlayer","startEmojiTalk","setTalk","stopEmojiTalk","showRecognition","hideRecognition","showFaceParticle","setHide","hideFaceParticle","showEyeCenter","setShowCenter","showEyeLeft","showBackgroundStar","setShowStar","hideBackgroundStar","updateManager","AppUpdateManager","isInitInstall","isUpdating","checkUpdate","setUpdateEnable","enable","isSupportDisableUpdate","setUpdateListener","updateStatus","updateResult","updateProgress","count","index","oper","message","startUpdate","retryUpdate","cancelUpdate","robotSettingApi","RobotSettingApi","getRobotString","isSupportRobotSettingApi","msg","Promise","reject","getRobotFloat","getRobotInt","setRobotString","isSupportRobotSettingPermission","setRobotFloat","setRobotInt","registerRobotSettingListener","callbackId","unRegisterRobotSettingListener","isCharging","robotSettingApiVersion","clearSettingsListener","NlpPath","pathName","action","target","descriptor","decoratorViewPath","old","_len","arg","Array","_key","apply","React","createElement","NlpViewPath","_objectSpread","decoratorPath","targetWM","componentWillMount","onPathMount","targetWUM","componentWillUnmount","onPathUnmount","_react","TAG","defaultPath","setPath","pre","props","_super","render","Fragment","children","Component","_reactNativeQrcodeSvg","_orionosEveCore","componentDidMount","_get2","_getPrototypeOf2","BaseComponent","_mobxReact","_DemoViewModel","_DemoVoice","_DemoTrigger","_DemoModel","DemoTrigger","DemoScreen","observer","viewModel","DemoViewModel","DemoVoice","setViewModel","View","Text","style","fontSize","color","demoModel","getInfoText","exit","showSpeechText","setInfoText","_mobx","DemoModel","infoText","observable","onListenCallback","id","speak","BaseVoice","from","to","_DemoScreen","listenersManager","listen"],"mappings":"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"}